openapi: 3.0.0
servers:
  - url: 'http://localhost:8400'
info:
  description: Node/expressjs REST API.
  version: "1.0.0"
  title: Multi Vendor eCommerce API
  contact:
    name: andrew zachary
    url: 'https://github.com/andrew-zachary'
  license:
    name: Licensed Under MIT
    url: 'https://spdx.org/licenses/MIT.html'
tags:
  - name: Products
    description: Router for Product Model
  - name: Users
    description: Router for User Model
components:
  securitySchemes:
    access_token:
      type: apiKey
      in: cookie
      name: access_token
    refresh_token:
      type: apiKey
      in: cookie
      name: refresh_token
  schemas:
    Returned user props:
      type: object
      properties:
        firstName:
          type: string
          description: user's first name
        lastName:
          type: string
          description: user's last name
        email:
          type: object
          properties:
            address:
              type: string
              description: user's email address
            verified:
              type: boolean
              default: false
              description: is user's email verified
        accountStatus:
          type: string
          enum:
            - active
            - inactive
        avatar:
          type: string
          description: user's avatar image-url
        currentBalance:
          type: string
          description: user's current balance
        appPreferences:
          type: object
          properties:
            mode:
              type: string
              enum:
                - light
                - dark
            lang:
              type: string
              enum:
                - en
                - ar
        _id:
          type: string
          description: user's id
        createdAt:
          type: string
          description: the date-time for user's account
    Common product props:
      type: object
      properties:
        name:
          type: string
          description: product name
        thumbnail:
          type: string
          description: product thumbnail name
        features:
          type: array
          items:
            type: object
            properties:
              text:
                type: string
                description: product's single feature description
        description:
          type: string
          description: product description
        instock:
          type: boolean
          description: product instock flag
        freeShipping:
          type: boolean
          description: product free shipping flag
        lang:
          type: string
          enum:
            - en
            - ar
          description: the product language
paths:
  /api/v1/products:
    post:
      description: create new product
      security:
        - access_token: []
        - refresh_token: []
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    price:
                      type: number
                      description: product price
                - $ref: "#/components/schemas/Common product props"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _id:
                        type: string
                        description: product id
                      slug:
                        type: string
                        description: product slug
                      avgRating:
                        type: object
                        properties:
                          amount:
                            type: number
                            default: 4.5
                            description: product avg rating
                          numOfRating:
                            type: number
                            default: 0
                            description: product's number of ratings
                      price:
                        type: object
                        properties:
                          $numberDecimal:
                            type: number
                            description: product price(toFixed(2))
                  - $ref: "#/components/schemas/Common product props"
  /api/v1/products/collection:
    get:
      description: get all the products for the authed user
      security:
        - access_token: []
        - refresh_token: []
      tags:
        - Products
      parameters:
        - name: page
          in: query
          description: page number
          schema:
            type: number
            default: 1
        - name: limit
          in: query
          description: limit number of products to show per page
          schema:
            type: number
            default: 5
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - type: object
                      properties:
                        price:
                          type: object
                          properties:
                            $numberDecimal:
                              type: number
                              description: product price(toFixed(2))
                    - $ref: "#/components/schemas/Common product props"
  /api/v1/products/{id}:
    get:
      description: get a single product within authed user collection
      security:
        - access_token: []
        - refresh_token: []
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          description: a product id
          schema:
            type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _id:
                        type: string
                        description: product id
                      slug:
                        type: string
                        description: product slug
                      avgRating:
                        type: object
                        properties:
                          amount:
                            type: number
                            default: 4.5
                            description: product avg rating
                          numOfRating:
                            type: number
                            default: 0
                            description: product's number of ratings
                      price:
                        type: object
                        properties:
                          $numberDecimal:
                            type: number
                            description: product price(toFixed(2))
                  - $ref: "#/components/schemas/Common product props"
    patch:  
      description: update a single product within authed user collection
      security:
        - access_token: []
        - refresh_token: []
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          description: a product id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    price:
                      type: number
                      description: product price
                - $ref: "#/components/schemas/Common product props"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _id:
                        type: string
                        description: product id
                      slug:
                        type: string
                        description: product slug
                      avgRating:
                        type: object
                        properties:
                          amount:
                            type: number
                            default: 4.5
                            description: product avg rating
                          numOfRating:
                            type: number
                            default: 0
                            description: product's number of ratings
                      price:
                        type: object
                        properties:
                          $numberDecimal:
                            type: number
                            description: product price(toFixed(2))
                  - $ref: "#/components/schemas/Common product props"
    delete:
      description: delete a single product within authed user collection
      security:
        - access_token: []
        - refresh_token: []
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          description: a product id
          schema:
            type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _id:
                        type: string
                        description: product id
                      slug:
                        type: string
                        description: product slug
                      avgRating:
                        type: object
                        properties:
                          amount:
                            type: number
                            default: 4.5
                            description: product avg rating
                          numOfRating:
                            type: number
                            default: 0
                            description: product's number of ratings
                      price:
                        type: object
                        properties:
                          $numberDecimal:
                            type: number
                            description: product price(toFixed(2))
                  - $ref: "#/components/schemas/Common product props"
  /api/v1/products/images:
    post:
      description: upload new image for a product
      security:
        - access_token: []
        - refresh_token: []
      tags:
        - Products
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: string
                description: the file name of the uploaded image
  /api/v1/users/signup:
    post:
      description: signup new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: user's first name
                lastName:
                  type: string
                  description: user's last name
                email:
                  type: string
                  description: user's email
                password:
                  type: string
                  description: user's password
      responses:
        200:
          description: ok
          headers:
            Set-Cookie:
              description: set both access_token and refresh_token
              schema:
                type: string
                example: access_token=123; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Returned user props'
  /api/v1/users/signin:
    post:
      description: signin new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user's email
                password:
                  type: string
                  description: user's password
      responses:
        200:
          description: ok
          headers:
            Set-Cookie:
              description: set both access_token and refresh_token
              schema:
                type: string
                example: access_token=123; Path=/; HttpOnly
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Returned user props'
  /api/v1/users/profile:
    get:
      description: get logged in user profile
      security:
        - access_token: []
        - refresh_token: []
      tags:
        - Users
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/Returned user props'
    